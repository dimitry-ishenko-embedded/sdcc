#!/usr/bin/make -f
# -*- makefile -*-

#include /usr/share/quilt/quilt.make

# Uncomment this to turn on verbose mode. 
# export DH_VERBOSE=1

DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

export HOME=$(CURDIR)/build

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -g -O0
	export STRIP=true
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

configure: config.status
config.status:
	#config.status: $(QUILT_STAMPFN)
	dh_testdir
	cp /usr/share/misc/config.sub sim/ucsim/config.sub
	cp /usr/share/misc/config.guess sim/ucsim/config.guess
	autoconf
	mkdir -p $(CURDIR)/build
	@printf "\n == CONFIGURE =================================================== \n\n"
	#CFLAGS+="$(CFLAGS)" 
	./configure \
		--host=$(DEB_HOST_GNU_TYPE) \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--prefix=/usr \
		--disable-doc \
		--disable-mcs51-port \
		--disable-gbz80-port \
		--disable-z80-port   \
		--disable-hc08-port  \
		--disable-ds390-port \
		--disable-ds400-port
	@printf "\n ------------------------------------------- End of CONFIGURE ---- \n\n"

build: build-stamp
build-stamp:  config.status
	dh_testdir
	@printf "\n == MAKE ======================================================== \n\n"
	$(MAKE)
	@printf "\n ----------------------------------------------- End of MAKE ---- \n\n"
	touch $@

clean:
#clean: unpatch
	dh_testdir
	dh_testroot
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -rf as/link/z80/obj-*
	rm -f  as/strcmpi.o
	rm -f support/cpp2/config{args.h,.log,.status}
	rm -f sim/ucsim/config.{guess,sub,status,log}
	rm -f doc/z80/combined_i186_z80_design.{aux,log,ps}
	rm -f config.log
	[ ! -f Makefile ] || $(MAKE) -C doc clean
	[ ! -f Makefile ] || $(MAKE) -C doc/z80 clean
	rm -f ports.*
	find $(CURDIR)/device/lib -name Makefile -exec rm {} \;
	find $(CURDIR) -name Makefile -exec rm {} \;
	rm -rf $(CURDIR)/build
	rm -f debugger/mcs51/config.log
	rm -f debugger/mcs51/config.status

	dh_clean

install-arch: install-arch-stamp
install-arch-stamp: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs -a

	@printf "\n == INSTALL ===================================================== \n\n"
	$(MAKE) install prefix=$(CURDIR)/debian/tmp/usr
	@printf "\n -------------------------------------------- End of INSTALL ---- \n\n"

#	@printf "\n == doc: INSTALL ================================================ \n\n"
#	$(MAKE) -C doc install prefix=$(CURDIR)/debian/tmp
#	@printf "\n --------------------------------------- End of doc: INSTALL ---- \n\n"

	# Install emacs helper file.
	#mkdir -p $(CURDIR)/debian/tmp/usr/share/emacs/site-lisp/sdcc-ucsim
	#mv $(CURDIR)/debian/tmp/usr/bin/*.el $(CURDIR)/debian/tmp/usr/share/emacs/site-lisp/sdcc-ucsim

	dh_install -psdcc --sourcedir=debian/tmp

	# Moving all files in /usr/share/doc/ucsim to /usr/share/doc/sdcc-ucsim
	mv $(CURDIR)/debian/tmp/usr/share/doc/ucsim $(CURDIR)/debian/tmp/usr/share/doc/sdcc-ucsim

	dh_install -psdcc-ucsim --sourcedir=debian/tmp

	touch $@

install-indep: install-indep-stamp
install-indep-stamp: install-arch
	dh_testdir
	dh_testroot
	dh_installdirs -i

	# Moving all other files in /usr/share/sdcc/doc to /usr/share/doc/sdcc-doc
	mkdir $(CURDIR)/debian/tmp/usr/share/doc/sdcc-doc
	mkdir -p debian/temp/sdcc-doc
	mv $(CURDIR)/debian/tmp/usr/share/doc/* debian/temp/sdcc-doc
	mv debian/temp/sdcc-doc/sdcc-ucsim $(CURDIR)/debian/tmp/usr/share/doc/
	mv debian/temp/sdcc-doc $(CURDIR)/debian/tmp/usr/share/doc
	rmdir debian/temp

	find $(CURDIR)/debian/tmp/usr/share/doc -name "INSTALL.txt" -exec rm {} \;

	dh_install -psdcc-doc --sourcedir=debian/tmp 

	# Install support scripts
	mkdir -p $(CURDIR)/debian/tmp/usr/share/sdcc/scripts
	install -m 755 $(CURDIR)/support/scripts/inc2h.pl $(CURDIR)/debian/tmp/usr/share/sdcc/scripts
	install -m 755 $(CURDIR)/support/scripts/keil2sdcc.pl $(CURDIR)/debian/tmp/usr/share/sdcc/scripts

	# Removing execute permission on some text files.
	find $(CURDIR)/debian/tmp/usr/share/sdcc/lib -type f -exec chmod -x {} \;

	# Remove useless files
	find $(CURDIR)/debian/tmp/usr/share/sdcc/lib -name "*.asm" -exec rm {} \;
	find $(CURDIR)/debian/tmp/usr/share/sdcc/lib -name "*README*" -exec rm {} \;
	find $(CURDIR)/debian/tmp/usr/share/sdcc/lib -name "*COPYING*" -exec rm {} \;
	find $(CURDIR)/debian/tmp/usr/share/sdcc/lib -name "*MOVED*" -exec rm {} \;
	find $(CURDIR)/debian/tmp/usr/share/sdcc/lib -name "configure" -exec rm {} \;
	find $(CURDIR)/debian/tmp/usr/share/sdcc/lib -name "config.status" -exec rm {} \;

	# Toggle the executable flag on the script
	chmod +x $(CURDIR)/debian/tmp/usr/share/sdcc/lib/src/pic/libdev/mkall.sh

	dh_install -psdcc-libraries --sourcedir=$(CURDIR)/debian/tmp 

	mkdir -p $(CURDIR)/debian/sdcc-libraries/usr/share/lintian/overrides/
	install -p -o root -g root -m 644 $(CURDIR)/debian/sdcc-libraries.overrides $(CURDIR)/debian/sdcc-libraries/usr/share/lintian/overrides/sdcc-libraries

	touch $@

install: install-arch install-indep

binary-indep: install-indep
	dh_testdir -i
	dh_testroot -i
	dh_installdocs -i
	dh_installemacsen -i
	dh_installman -i
	dh_installchangelogs -i ChangeLog 
	dh_strip -i 
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_shlibdeps -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: install-arch
	dh_testdir -a
	dh_testroot -a
	dh_installdocs -a
	dh_installemacsen -a
	dh_installman -a
	dh_installchangelogs -a ChangeLog 
	dh_strip -a 
	dh_link -a
	dh_compress -a
	dh_fixperms -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-arch install-indep
